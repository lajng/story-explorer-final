import{openDB as E}from"https://cdn.jsdelivr.net/npm/idb@7/+esm";import*as s from"https://unpkg.com/leaflet@1.9.4/dist/leaflet-src.esm.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const i of a.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function r(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerPolicy&&(a.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?a.credentials="include":o.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(o){if(o.ep)return;o.ep=!0;const a=r(o);fetch(o.href,a)}})();const f={async renderLoginPage(){const e=document.createElement("section");return e.className="page",e.id="login-page",e.innerHTML=`
      <h1>Login</h1>
      <form id="login-form">
        <label for="login-email">Email</label>
        <input type="email" id="login-email" required />

        <label for="login-password">Password</label>
        <input type="password" id="login-password" required />

        <button type="submit" class="btn btn-primary">Login</button>
      </form>
      <div id="login-message" class="form-message"></div>
    `,e},async renderRegisterPage(){const e=document.createElement("section");return e.className="page",e.id="register-page",e.innerHTML=`
      <h1>Register</h1>
      <form id="register-form">
        <label for="register-name">Nama</label>
        <input type="text" id="register-name" required />

        <label for="register-email">Email</label>
        <input type="email" id="register-email" required />

        <label for="register-password">Password</label>
        <input type="password" id="register-password" required />

        <button type="submit" class="btn btn-primary">Daftar</button>
      </form>
      <div id="register-message" class="form-message"></div>
    `,e},showLoginMessage(e,t=!1){const r=document.getElementById("login-message");r&&(r.textContent=e,r.style.color=t?"red":"green")},showRegisterMessage(e,t=!1){const r=document.getElementById("register-message");r&&(r.textContent=e,r.style.color=t?"red":"green")}},L="story-explorer-db",g="favorite-stories";async function u(){return E(L,1,{upgrade(e){e.objectStoreNames.contains(g)||e.createObjectStore(g,{keyPath:"id"})}})}async function v(e){await(await u()).put(g,e)}async function M(e){const r=await(await u()).getAll(g);e(r)}async function k(e){await(await u()).delete(g,e)}const c={render(e){const t=document.getElementById("story-list");t.innerHTML="",e.forEach(r=>{const n=document.createElement("div");n.className="story-card",n.innerHTML=`
        <h3>${r.title||"Tanpa Judul"}</h3>
        <p>${r.description}</p>
        <button class="btn-favorite" data-story='${JSON.stringify(r)}'>‚ù§Ô∏è Simpan ke Favorite</button>
      `,t.appendChild(n)}),t.addEventListener("click",r=>{if(r.target.classList.contains("btn-favorite")){const n=JSON.parse(r.target.getAttribute("data-story"));v(n),alert("Story disimpan ke Favorite!")}})},renderFavoriteStoriesPage(){const e=document.createElement("section");return e.className="page",e.id="favorites-page",e.innerHTML=`
      <h2>Favorite Stories</h2>
      <div id="favorites-container" class="story-list"></div>
    `,M().then(t=>{const r=e.querySelector("#favorites-container");t.length===0?r.innerHTML="<p>Tidak ada story favorit.</p>":(t.forEach(n=>{const o=document.createElement("div");o.className="story-card",o.innerHTML=`
            <h3>${n.title||"Tanpa Judul"}</h3>
            <p>${n.description}</p>
            <button data-id="${n.id}" class="delete-btn">üóëÔ∏è Hapus</button>
          `,r.appendChild(o)}),r.addEventListener("click",n=>{if(n.target.classList.contains("delete-btn")){const o=n.target.getAttribute("data-id");k(o).then(()=>{n.target.closest(".story-card").remove()})}}))}),e}},m="user_token",d={setToken(e){localStorage.setItem(m,e)},getToken(){return localStorage.getItem(m)},isAuthenticated(){return!!this.getToken()},logout(){localStorage.removeItem(m),location.hash="#login"}},w={init(){const e=document.getElementById("login-form"),t=document.getElementById("register-form");e&&e.addEventListener("submit",this.handleLogin),t&&t.addEventListener("submit",this.handleRegister);const r=document.getElementById("logout-button");r&&r.addEventListener("click",()=>{d.logout(),window.location.hash="#login"})},async handleLogin(e){e.preventDefault();const t=document.getElementById("login-email").value.trim(),r=document.getElementById("login-password").value.trim(),n=document.getElementById("login-message");try{const o=await fetch("https://story-api.dicoding.dev/v1/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:t,password:r})}),a=await o.json();if(!o.ok)throw new Error(a.message);d.setToken(a.loginResult.token),n.textContent="Login berhasil!",n.style.color="green",setTimeout(()=>{window.location.hash="#home"},1e3)}catch(o){d.logout(),n.textContent="Login gagal: "+o.message,n.style.color="red"}},async handleRegister(e){e.preventDefault();const t=document.getElementById("register-name").value.trim(),r=document.getElementById("register-email").value.trim(),n=document.getElementById("register-password").value.trim(),o=document.getElementById("register-message");if(!t||!r||!n){o.textContent="Semua field harus diisi.",o.style.color="red";return}if(n.length<6){o.textContent="Password minimal 6 karakter.",o.style.color="red";return}console.log("Data yang dikirim:",{name:t,email:r,password:n});try{const a=await fetch("https://story-api.dicoding.dev/v1/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:t,email:r,password:n})}),i=await a.json();if(!a.ok)throw new Error(i.message);o.textContent="Registrasi berhasil! Silakan login.",o.style.color="green",e.target.reset(),setTimeout(()=>{window.location.hash="#login"},1e3)}catch(a){o.textContent="Gagal daftar: "+a.message,o.style.color="red"}}},l={storyMap:null,addStoryMap:null,initStoryMap(e){const t=document.getElementById("stories-map");t&&(this.storyMap&&this.storyMap.remove(),this.storyMap=s.map(t).setView([-6.2,106.8],5),s.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenStreetMap contributors"}).addTo(this.storyMap),setTimeout(()=>{this.storyMap.invalidateSize()},500),e.forEach(r=>{r.lat&&r.lon&&s.marker([r.lat,r.lon]).addTo(this.storyMap).bindPopup(`<strong>${r.name}</strong><br>${r.description}`)}))},initAddStoryMap(){const e=document.getElementById("location-map");if(!e)return;this.addStoryMap&&this.addStoryMap.remove(),this.addStoryMap=s.map(e).setView([-6.2,106.8],10),s.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenStreetMap contributors"}).addTo(this.addStoryMap),setTimeout(()=>{this.addStoryMap.invalidateSize()},500);let t=null;this.addStoryMap.on("click",function(r){const{lat:n,lng:o}=r.latlng;t?t.setLatLng([n,o]):t=s.marker([n,o]).addTo(l.addStoryMap),window.AppState=window.AppState||{},window.AppState.currentLocation={lat:n.toFixed(6),lon:o.toFixed(6)}})}},b={async loadStories(){const e=d.getToken();if(!e){window.location.hash="#login";return}try{const t=await fetch("https://story-api.dicoding.dev/v1/stories",{headers:{Authorization:`Bearer ${e}`}});if(t.status===401){d.logout(),window.location.hash="#login";return}const r=await t.json();if(!t.ok)throw new Error(r.message||"Gagal memuat cerita");c.renderStoryList(r.listStory),l.initStoryMap(r.listStory),setTimeout(()=>{l.storyMap&&l.storyMap.invalidateSize()},300)}catch(t){c.renderError(t.message||"Terjadi kesalahan saat memuat cerita.")}},initSubmitHandler(){const e=document.getElementById("story-form");e&&(e.addEventListener("submit",async t=>{t.preventDefault();const r=document.getElementById("story-description").value,n=window.AppState?.capturedPhoto,o=window.AppState?.currentLocation;if(!n){alert("Silakan ambil foto terlebih dahulu.");return}if(!o){alert("Silakan pilih lokasi terlebih dahulu.");return}const a=new FormData;a.append("description",r),a.append("lat",o.lat),a.append("lon",o.lon),a.append("photo",n);try{const i=d.getToken();if(!i){alert("Anda harus login terlebih dahulu."),window.location.hash="#login";return}const y=await fetch("https://story-api.dicoding.dev/v1/stories",{method:"POST",headers:{Authorization:`Bearer ${i}`},body:a}),p=await y.json();if(!y.ok)throw new Error(p.message);alert("Cerita berhasil ditambahkan!"),v({id:p.story.id||Date.now().toString(),title:p.story.name||"Cerita Offline",body:r,lat:o.lat,lon:o.lon,createdAt:new Date().toISOString()}),window.location.hash="#home"}catch(i){alert("Gagal mengirim cerita: "+i.message)}}),l.initAddStoryMap())}},T="BObTt6J9Ey2b......";function A(e){const t="=".repeat((4-e.length%4)%4),r=(e+t).replace(/-/g,"+").replace(/_/g,"/"),n=window.atob(r),o=new Uint8Array(n.length);for(let a=0;a<n.length;++a)o[a]=n.charCodeAt(a);return o}function B(){"Notification"in window&&Notification.requestPermission().then(e=>{e==="granted"&&S()})}function S(){navigator.serviceWorker.ready.then(e=>{e.pushManager&&e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:A(T)}).then(t=>{console.log("Berhasil subscribe push:",t)}).catch(t=>{console.error("Gagal subscribe push:",t)})})}const h={init:async()=>{await u(),"serviceWorker"in navigator&&window.addEventListener("load",async()=>{try{const e=await navigator.serviceWorker.register("/sw.js");console.log("‚úÖ Service Worker registered:",e),await B(),await S(e)}catch(e){console.error("‚ùå SW registration/push failed:",e)}}),window.addEventListener("hashchange",h.route),window.addEventListener("DOMContentLoaded",h.route)},route:async()=>{const e=window.location.hash||"#login",t=document.getElementById("main-content");switch(t.innerHTML="",e){case"#register":t.appendChild(await f.renderRegisterPage()),w.initRegisterHandler();break;case"#login":t.appendChild(await f.renderLoginPage()),w.initLoginHandler();break;case"#home":t.appendChild(await c.renderHomePage()),b.loadStories();break;case"#add-story":t.appendChild(await c.renderAddStoryPage()),b.initSubmitHandler();break;case"#favorites":t.appendChild(await c.renderFavoriteStoriesPage());break;default:t.innerHTML="<p>Halaman tidak ditemukan</p>"}}};h.init();
